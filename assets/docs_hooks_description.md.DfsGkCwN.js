import{_ as e,c as a,o,a3 as s}from"./chunks/framework.CtA4ZjMf.js";const m=JSON.parse('{"title":"Hooks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/hooks/description.md","filePath":"docs/hooks/description.md","lastUpdated":1715849003000}'),n={name:"docs/hooks/description.md"},t=s(`<h1 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;Hooks&quot;">​</a></h1><p>在引入 <code>vueuse</code>, <code>vue-hooks-plus</code> 两个 <code>hooks</code> 库以外，我们还自定义了一些 <code>hooks</code>，这些 <code>hooks</code> 用于简化开发，提高开发效率。</p><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   ├── hooks</span></span>
<span class="line"><span>│   │   ├── components</span></span>
<span class="line"><span>│   │   ├── template</span></span>
<span class="line"><span>└─  └─  └─ web</span></span></code></pre></div><h2 id="components" tabindex="-1">components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;components&quot;">​</a></h2><p>与组件相关联的 <code>hooks</code>。</p><h2 id="template" tabindex="-1">template <a class="header-anchor" href="#template" aria-label="Permalink to &quot;template&quot;">​</a></h2><p>项目模板相关的 <code>hooks</code>。</p><h2 id="web" tabindex="-1">web <a class="header-anchor" href="#web" aria-label="Permalink to &quot;web&quot;">​</a></h2><p>基于库或的自定义 <code>hooks</code>。</p>`,10),c=[t];function p(d,i,l,r,h,_){return o(),a("div",null,c)}const u=e(n,[["render",p]]);export{m as __pageData,u as default};
