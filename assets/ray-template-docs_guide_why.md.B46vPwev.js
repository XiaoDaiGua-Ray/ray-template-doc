import{_ as e,c as a,o as t,a3 as o}from"./chunks/framework.CtA4ZjMf.js";const u=JSON.parse('{"title":"Ray Template","description":"","frontmatter":{},"headers":[],"relativePath":"ray-template-docs/guide/why.md","filePath":"ray-template-docs/guide/why.md","lastUpdated":1715849003000}'),r={name:"ray-template-docs/guide/why.md"},d=o('<h1 id="ray-template" tabindex="-1">Ray Template <a class="header-anchor" href="#ray-template" aria-label="Permalink to &quot;Ray Template&quot;">​</a></h1><h2 id="诞生背景" tabindex="-1">诞生背景 <a class="header-anchor" href="#诞生背景" aria-label="Permalink to &quot;诞生背景&quot;">​</a></h2><p>中后台系统是一个必不可缺的平台，它具有数据管理核心、多个部门协同的优势，以及可视化展示数据等特点。然而，在业务开发过程中，由于系统复杂度较高，可能会出现大量重复的工作，例如菜单、标签页、面包屑等问题，这些问题需要在业务开发的过程中进行处理，导致开发人员需要在开发业务的同时关注多处展示联动等问题，增加了开发难度和时间成本。</p><p>为了解决这个问题，中后台模板应运而生。中后台模板提供了一种标准化的解决方案，可以帮助开发人员快速构建中后台系统，减少重复工作的出现。开发人员可以专注于业务开发，而不必花费过多的时间和精力在处理系统展示联动等问题上。这不仅能提高开发效率，还能保证系统的可靠性和稳定性。</p><h2 id="现实问题" tabindex="-1">现实问题 <a class="header-anchor" href="#现实问题" aria-label="Permalink to &quot;现实问题&quot;">​</a></h2><p>尽管市面上有许多中后台模板可供选择，但随着前端技术的不断迭代，这些模板显得有些过时。随着 <code>vite</code>、<code>Vue3.x</code> 和 <code>pinia</code> 等新技术的出现，<code>Vue</code> 的生态系统变得更加强大，开发者可以在获得更好的开发体验的同时，获得更高的性能。</p><p>因此，对于一个拥有全新技术整合方案的中后台模板的需求也是非常合理的。这样的模板可以提供更先进的技术支持，使开发者能够更好地应对快速变化的前端技术发展。同时，这样的模板还可以提高系统的性能和稳定性，为用户提供更好的使用体验。</p>',7),c=[d];function i(s,l,p,n,_,h){return t(),a("div",null,c)}const y=e(r,[["render",i]]);export{u as __pageData,y as default};
