import{_ as s,c as i,o as a,a3 as t}from"./chunks/framework.CtA4ZjMf.js";const E=JSON.parse('{"title":"usePagination","description":"","frontmatter":{},"headers":[],"relativePath":"docs/hooks/web/usePagination.md","filePath":"docs/hooks/web/usePagination.md","lastUpdated":1716184856000}'),n={name:"docs/hooks/web/usePagination.md"},e=t(`<h1 id="usepagination" tabindex="-1">usePagination <a class="header-anchor" href="#usepagination" aria-label="Permalink to &quot;usePagination&quot;">​</a></h1><p>分页器 <code>hooks</code>。</p><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>paginationRef</td><td><code>Ref&lt;UsePaginationOptions&gt;</code></td><td>响应式分页配置项</td></tr><tr><td>setItemCount</td><td><code>(itemCount: number) =&gt; void</code></td><td>设置总条数</td></tr><tr><td>getPage</td><td><code>() =&gt; number</code></td><td>获取页码</td></tr><tr><td>setPage</td><td><code>() =&gt; number</code></td><td>设置页码</td></tr><tr><td>getPageSize</td><td><code>() =&gt; number</code></td><td>获取分页条数</td></tr><tr><td>setPageSize</td><td><code>(pageSize: number) =&gt; void</code></td><td>设置分页条数</td></tr><tr><td>getPagination</td><td><code>getPagination: () =&gt; UsePaginationOptions</code></td><td>获取分页配置项</td></tr><tr><td>getCallback</td><td><code>T | undefined</code></td><td>获取设置的回调函数</td></tr><tr><td>setCallback</td><td><code>&lt;T extends AnyFC&gt;(callback: T) =&gt; void</code></td><td>动态设置回调函数</td></tr><tr><td>resetPagination</td><td><code>() =&gt; void</code></td><td>重置分页配置</td></tr></tbody></table><h2 id="基础使用" tabindex="-1">基础使用 <a class="header-anchor" href="#基础使用" aria-label="Permalink to &quot;基础使用&quot;">​</a></h2><details class="details custom-block"><summary>code</summary><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { usePagination } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/hooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      paginationRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getPageSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setItemCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> usePagination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取人员列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPersonList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(getPersonList)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></details>`,6),d=[e];function h(l,p,k,o,r,g){return a(),i("div",null,d)}const y=s(n,[["render",h]]);export{E as __pageData,y as default};
