import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.CtA4ZjMf.js";const g=JSON.parse('{"title":"请求","description":"","frontmatter":{},"headers":[],"relativePath":"ray-template-docs/common-problem/request-cancel.md","filePath":"ray-template-docs/common-problem/request-cancel.md","lastUpdated":1716184856000}'),e={name:"ray-template-docs/common-problem/request-cancel.md"},t=n(`<h1 id="请求" tabindex="-1">请求 <a class="header-anchor" href="#请求" aria-label="Permalink to &quot;请求&quot;">​</a></h1><h2 id="自动取消请求" tabindex="-1">自动取消请求 <a class="header-anchor" href="#自动取消请求" aria-label="Permalink to &quot;自动取消请求&quot;">​</a></h2><p>模板会自动的搜集所有的 <code>axios</code> 请求，并且在识别到重复请求的时候自动取消重复请求。并且在路由更新前的时候，会自动取消当前页面的所有请求。如果你并不希望该请求被取消，你可以手动的配置 <code>cancelConfig.cancel</code> 属性为 <code>false</code>。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>取消器在每次取消请求的时候会自动有一个 <code>Error</code> 输出在控制台，但是他并不会影响你的请求方法，因为取消器仅会取消重复请求，所以当你的请求重复时，就会被自动取消上一个重复请求。</p></div><h2 id="请求返回值-ts-类型声明" tabindex="-1">请求返回值 <code>ts</code> 类型声明 <a class="header-anchor" href="#请求返回值-ts-类型声明" aria-label="Permalink to &quot;请求返回值 \`ts\` 类型声明&quot;">​</a></h2><p>不论是 <code>request</code> 方法，又或者是 <code>useRequest</code> 方法，都可以手动的传递类型为请求响应值批注类型。<code>useHookPlusRequest</code> 方法会自动的推导返回值类型，一般来讲不需要手动的批注。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useRequest, useHookPlusRequest, request } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/axios&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http:xxxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;get&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http:xxxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;get&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,7),l=[t];function p(h,k,r,d,c,o){return a(),i("div",null,l)}const y=s(e,[["render",p]]);export{g as __pageData,y as default};
